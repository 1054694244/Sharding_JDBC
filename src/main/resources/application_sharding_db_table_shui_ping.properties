spring.application.name=shardingJdbc
server.port=9901

# sharding-jdbc 水平分库分表策略
# 配置数据源，给数据源起别名
# 水平分库需要配置多个数据库
spring.shardingsphere.datasource.names=shardingjdbc1,shardingjdbc2

# 一个实体类对应多张表，覆盖
spring.main.allow-bean-definition-overriding=true

#配置第一个数据源
spring.shardingsphere.datasource.shardingjdbc1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.shardingjdbc1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.shardingjdbc1.url=jdbc:mysql://114.55.146.217:3306/test_sharding_jdbc_01?useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.shardingjdbc1.username=root
spring.shardingsphere.datasource.shardingjdbc1.password=password

#配置第二个数据源
spring.shardingsphere.datasource.shardingjdbc2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.shardingjdbc2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.shardingjdbc2.url=jdbc:mysql://114.55.146.217:3306/test_sharding_jdbc_02?useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.shardingjdbc2.username=root
spring.shardingsphere.datasource.shardingjdbc2.password=password

# 指定数据库分布的情况和数据表分布的情况 两库各三表
# shardingjdbc1 shardingjdbc2   sharding_test_01 sharding_test_02 sharding_test_03
spring.shardingsphere.sharding.tables.sharding_test.actual-data-nodes=shardingjdbc$->{1..2}.sharding_test_0$->{1..3}

# 指定 sharding_test 表里面主键 cid 的生成策略 SNOWFLAKE
spring.shardingsphere.sharding.tables.sharding_test.key-generator.column=cid
spring.shardingsphere.sharding.tables.sharding_test.key-generator.type=SNOWFLAKE

# 指定分库策略    约定 user_id 值偶数添加到 shardingjdbc1 库，如果 user_id 是奇数添加到 shardingjdbc2 库
# 默认写法（所有的表的user_id）
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=m$->{user_id % 2 + 1}
# 指定只有course表的user_id
spring.shardingsphere.sharding.tables.sharding_test.database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.sharding_test.database-strategy.inline.algorithm-expression=shardingjdbc$->{user_id % 2 + 1}

# 指定分表策略    约定 cid 值偶数添加到 sharding_test_01 表，如果 cid 是奇数添加到 sharding_test_02 表
spring.shardingsphere.sharding.tables.sharding_test.table-strategy.inline.sharding-column=cid
spring.shardingsphere.sharding.tables.sharding_test.table-strategy.inline.algorithm-expression=sharding_test_0$->{cid % 3 + 1}

# 打开 sql 输出日志
spring.shardingsphere.props.sql.show=true
