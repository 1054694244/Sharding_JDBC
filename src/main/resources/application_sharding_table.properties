spring.application.name=shardingJdbc
server.port=9901


#sharding_jdbc 水平分表策略
#配置数据源，给数据源起别名
spring.shardingsphere.datasource.names=shardingjdbc

#一个实体类对应三张表，覆盖
spring.main.allow-bean-definition-overriding=true

#配置数据源
spring.shardingsphere.datasource.shardingjdbc.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.shardingjdbc.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.shardingjdbc.url=jdbc:mysql://114.55.146.217:3306/test_sharding_jdbc_01?useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.shardingjdbc.username=root
spring.shardingsphere.datasource.shardingjdbc.password=password

#指定sharding_test表分布的情况，配置表在哪个数据库里，标的名称都是什么 shardingJdbc.sharding_test_01 shardingJdbc.sharding_test_02 ...
spring.shardingsphere.sharding.tables.sharding_test.actual-data-nodes=shardingjdbc.sharding_jdbc_$->{01..03}

#指定sharding_test表里面主键 cid 的生成策略 SNOWFLAKE
spring.shardingsphere.sharding.tables.sharding_test.key-generator.column=cid
spring.shardingsphere.sharding.tables.sharding_test.key-generator.type=auto_increment

#配置分表策略，约定cid值取模3为0添加到sharding_test_01表，为1添加到sharding_test_02，位2添加到sharding_test_03表
spring.shardingsphere.sharding.tables.shardingTest.table-strategy.inline..sharding-column=cid
spring.shardingsphere.sharding.tables.shardingTest.table-strategy.inline..algorithm-expression=sharding_test_0$->{cid%3+1}

# 打开 sql 输出日志
spring.shardingsphere.props.sql.show=true